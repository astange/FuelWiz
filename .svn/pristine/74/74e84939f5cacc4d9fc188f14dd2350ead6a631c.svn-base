package com.jas.fuelwiz;

import java.io.IOException;
import java.util.List;
import java.util.Locale;

import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.os.Looper;
import android.provider.Settings;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;





public class MainActivity extends Activity {
	//define buttons in xml
	EditText editDistance1, editDistance2, editMPG, editStation1, editStation2, gallonsToFill;
	Button bCompute;
	TextView tResult;
	
	private double distanceToStation1, distanceToStation2, gallons, mpg, priceAtStation1, priceAtStation2;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		//get pointer to button in gui 
		editDistance1 = (EditText) findViewById(R.id.editDistance1);
		editDistance2 = (EditText) findViewById(R.id.editDistance2);
		editMPG = (EditText) findViewById(R.id.editMPG);
		editStation1 = (EditText) findViewById(R.id.editStation1);
		editStation2 = (EditText) findViewById(R.id.editStation2);
		gallonsToFill = (EditText) findViewById(R.id.editGallons);
		bCompute = (Button) findViewById(R.id.bCompute);
		tResult = (TextView) findViewById(R.id.tvResult);
		
		LocationManager lm = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
		AlertDialog.Builder dialog;
        try{
        	if(lm.isProviderEnabled(LocationManager.NETWORK_PROVIDER)){
        		LocationListener locationListener = new MyLocationListener();  
        		Looper loop = Looper.getMainLooper();
        		//locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 5000, 10, locationListener);
        		lm.requestSingleUpdate(LocationManager.NETWORK_PROVIDER, locationListener, loop);
        	}
        	else{
        		dialog = new AlertDialog.Builder(this);
	            dialog.setMessage(this.getResources().getString(R.string.network_not_enabled));
	            dialog.setPositiveButton(this.getResources().getString(R.string.open_location_settings), new DialogInterface.OnClickListener() {

	                @Override
	                public void onClick(DialogInterface paramDialogInterface, int paramInt) {
	                    // TODO Auto-generated method stub
	                    Intent myIntent = new Intent( Settings.ACTION_SECURITY_SETTINGS );
	                    startActivity(myIntent);
	                    //get gps
	                }
	            });
	            dialog.setNegativeButton(this.getString(R.string.Cancel), new DialogInterface.OnClickListener() {

	                @Override
	                public void onClick(DialogInterface paramDialogInterface, int paramInt) {
	                    finish();
	                }
	            });
	            dialog.show();
        	}
        }catch(Exception ex){}
	       
		
		/*
		editDistance.setText("0");
		editMPG.setText("0");
		editStation1.setText("0");
		editStation2.setText("0");
		*/
		
		
		bCompute.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				//set values from edittext to variables:
				distanceToStation1 = Double.parseDouble(editDistance1.getText().toString().trim());
				distanceToStation2 = Double.parseDouble(editDistance2.getText().toString().trim());
				mpg = Double.parseDouble(editMPG.getText().toString().trim());
				priceAtStation1 = Double.parseDouble(editStation1.getText().toString().trim());
				priceAtStation2 = Double.parseDouble(editStation2.getText().toString().trim());
				gallons = Double.parseDouble(gallonsToFill.getText().toString().trim());
				//will fail if not doubles
				
				//calculate as double... must parse to $0.00
				double savings = computePriceToGoToAndFromStation(distanceToStation1, gallons, mpg, priceAtStation1) - computePriceToGoToAndFromStation(distanceToStation2, gallons, mpg, priceAtStation2);
				//either this message or say go to station 1.
				String savingsToDollars = "" + Math.round((savings*100))/100;
				if(savings > 0.0) {
				tResult.setText("You will save $" + savingsToDollars + " by going to station 2");
				} else {
					tResult.setText("It is cheaper to go to the closer station. You will spend $" + savingsToDollars + "going to the other station.");
				}
			}
		});
	}
	
	private double computePriceToGoToAndFromStation(double distance, double gallonsToFill, double mpg, double priceAtStation) {
		return (priceAtStation * gallonsToFill) + ((distance*2) / mpg);
	}

	private double computeSavings(double distance, double gallonsToFill, double mpg, double priceAtStation1, double priceAtStation2) {
		//error check within method or at the individual edittexts???
		return ((Math.abs(priceAtStation1 - priceAtStation2) * gallonsToFill) - (distance / mpg));
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	
	private class MyLocationListener implements LocationListener {

	    @Override
	    public void onLocationChanged(Location loc) {
	        editStation1.setText("");
	        //pb.setVisibility(View.INVISIBLE);
	        Toast.makeText(
	                getBaseContext(),
	                "Location changed: Lat: " + loc.getLatitude() + " Lng: "
	                    + loc.getLongitude(), Toast.LENGTH_SHORT).show();
	        String longitude = "Longitude: " + loc.getLongitude();
	        Log.v("TAG", longitude);
	        String latitude = "Latitude: " + loc.getLatitude();
	        Log.v("TAG", latitude);
	        /*-------to get City-Name from coordinates -------- */
	        String cityName = null;
	        Geocoder gcd = new Geocoder(getBaseContext(), Locale.getDefault());
	        List<Address> addresses;
	        try {
	            addresses = gcd.getFromLocation(loc.getLatitude(),
	                    loc.getLongitude(), 1);
	            if (addresses.size() > 0)
	                System.out.println(addresses.get(0).getLocality());
	            cityName = addresses.get(0).getLocality();
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	        String s = longitude + "\n" + latitude + "\n\nMy Current City is: "
	            + cityName;
	        editStation1.setText(s);
	    }

	    @Override
	    public void onProviderDisabled(String provider) {}

	    @Override
	    public void onProviderEnabled(String provider) {}

	    @Override
	    public void onStatusChanged(String provider, int status, Bundle extras) {}
	}

}
