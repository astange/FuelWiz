package com.jas.fuelwiz;

import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.Arrays;
import java.util.Scanner;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.os.StrictMode;

public class GoogleDistanceMatrixRequest {
	
	public static final int MAX_NUMBER_OF_STATIONS = 50;
	
	protected static String mylocation;
	//need to return duration and distance
	public static GoogleDistance[] getGoogleDistanceRequest(String latitude, String longitude, GasStation[] gasStations) {
		
		GoogleDistance[] results = null;
		
		//ping internet with least amount of info, so copy gasstation array and throw out unusable stations.. i.e no price
				
		StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
		StrictMode.setThreadPolicy(policy); 
		
		try {
			URL url = new URL(getURL(latitude, longitude, gasStations));
			URLConnection conn = url.openConnection();
			InputStream is = conn.getInputStream();
			Scanner scan = new Scanner(is);
			String fromInternet = "";
			while(scan.hasNext()) {
				fromInternet += scan.next();
				fromInternet += " ";
			}
			is.close();
			//parsing json from google
			JSONObject json = new JSONObject(fromInternet);
			JSONArray destinations = json.getJSONArray("destination_addresses");
			mylocation = json.getJSONArray("origin_addresses").getString(0);
			
			JSONArray rows = json.getJSONArray("rows");
			JSONArray elements = new JSONArray(rows.toString());
			//testing destinations at cmdlne
			System.out.println(destinations.toString());
			
			//get array of station info ie driving distance and time
			JSONArray distancesAndDurations = elements.getJSONObject(0).getJSONArray("elements");
			//determine size of array based on number of destinations that google returns
			results = new GoogleDistance[destinations.length()];
			//set values in each instance of a station from googleinstance
			for(int i = 0; i < destinations.length(); i++) {
				
				results[i] = new GoogleDistance(distancesAndDurations.getJSONObject(i).getJSONObject("distance").getDouble("value"), 
						distancesAndDurations.getJSONObject(i).getJSONObject("distance").getString("text"),
						distancesAndDurations.getJSONObject(i).getJSONObject("duration").getString("text"), 
						destinations.getString(i), gasStations[i]);
			}			
			
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace(); 
		}
		
//		results = new GoogleDistance[1];
	//	results[0] = new GoogleDistance(3, "5 mins", "some road aksjflkajdsf");
		return results;
		
	}
	
	public static String getURL(String latitude, String longitude, GasStation[] gasStations) {
		String urlString = "https://maps.googleapis.com/maps/api/distancematrix/json?origins=" + latitude + "," + longitude + "&destinations=";
		//format destinations
		String destinationsformatted = "";
		for(int i = 0; i < gasStations.length; i++) {
			destinationsformatted += gasStations[i].getLatitude() + "," + gasStations[i].getLongitude();
			destinationsformatted += "|";
		}
		destinationsformatted = destinationsformatted.substring(0, destinationsformatted.length() - 1);
		urlString += destinationsformatted + "&mode=driving&units=imperial&sensor=true";
		
		return urlString;
	}
		
}
